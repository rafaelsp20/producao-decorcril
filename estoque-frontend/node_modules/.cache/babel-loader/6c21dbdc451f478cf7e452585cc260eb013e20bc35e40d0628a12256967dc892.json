{"ast":null,"code":"var _jsxFileName = \"E:\\\\NestJs\\\\estoque\\\\estoque-frontend\\\\src\\\\pages\\\\StatusProducao.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function StatusProducao() {\n  _s();\n  const [ordens, setOrdens] = useState([]);\n  const [msg, setMsg] = useState('');\n  const fetchOrdens = () => {\n    api.get('/ordens-producao').then(res => setOrdens(res.data));\n  };\n  useEffect(() => {\n    fetchOrdens();\n  }, []);\n  const finalizarOrdem = async id => {\n    try {\n      await api.patch(`/ordens-producao/${id}/finalizar`);\n      setMsg('Ordem finalizada com sucesso!');\n      fetchOrdens();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMsg(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Erro ao finalizar ordem.');\n    }\n  };\n  const cancelarOrdem = async id => {\n    try {\n      await api.patch(`/ordens-producao/${id}/cancelar`);\n      setMsg('Ordem cancelada.');\n      fetchOrdens();\n    } catch {\n      setMsg('Erro ao cancelar ordem.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Status das Ordens de Fabrica\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Produto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantidade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"A\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: ordens.map(ordem => {\n          var _ordem$produto;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: ordem.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (_ordem$produto = ordem.produto) === null || _ordem$produto === void 0 ? void 0 : _ordem$produto.nome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ordem.quantidade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ordem.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ordem.createdAt ? new Date(ordem.createdAt).toLocaleString() : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: ordem.status === 'Pendente' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => finalizarOrdem(ordem.id),\n                  children: \"Finalizar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => cancelarOrdem(ordem.id),\n                  style: {\n                    marginLeft: 8\n                  },\n                  children: \"Cancelar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, ordem.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(StatusProducao, \"G/TArKv6lQzhHHdheX1n9CHNreU=\");\n_c = StatusProducao;\nvar _c;\n$RefreshReg$(_c, \"StatusProducao\");","map":{"version":3,"names":["useEffect","useState","api","jsxDEV","_jsxDEV","Fragment","_Fragment","StatusProducao","_s","ordens","setOrdens","msg","setMsg","fetchOrdens","get","then","res","data","finalizarOrdem","id","patch","error","_error$response","_error$response$data","response","message","cancelarOrdem","children","fileName","_jsxFileName","lineNumber","columnNumber","map","ordem","_ordem$produto","produto","nome","quantidade","status","createdAt","Date","toLocaleString","onClick","style","marginLeft","_c","$RefreshReg$"],"sources":["E:/NestJs/estoque/estoque-frontend/src/pages/StatusProducao.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { api } from '../services/api';\r\n\r\ntype OrdemProducao = {\r\n  id: number;\r\n  produto: { nome: string };\r\n  quantidade: number;\r\n  status: string;\r\n  createdAt?: string;\r\n};\r\n\r\nexport function StatusProducao() {\r\n  const [ordens, setOrdens] = useState<OrdemProducao[]>([]);\r\n  const [msg, setMsg] = useState('');\r\n\r\n  const fetchOrdens = () => {\r\n    api.get('/ordens-producao').then(res => setOrdens(res.data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchOrdens();\r\n  }, []);\r\n\r\n  const finalizarOrdem = async (id: number) => {\r\n    try {\r\n      await api.patch(`/ordens-producao/${id}/finalizar`);\r\n      setMsg('Ordem finalizada com sucesso!');\r\n      fetchOrdens();\r\n    } catch (error: any) {\r\n      setMsg(error.response?.data?.message || 'Erro ao finalizar ordem.');\r\n    }\r\n  };\r\n\r\n  const cancelarOrdem = async (id: number) => {\r\n    try {\r\n      await api.patch(`/ordens-producao/${id}/cancelar`);\r\n      setMsg('Ordem cancelada.');\r\n      fetchOrdens();\r\n    } catch {\r\n      setMsg('Erro ao cancelar ordem.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Status das Ordens de Fabricação</h1>\r\n      {msg && <p>{msg}</p>}\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Produto</th>\r\n            <th>Quantidade</th>\r\n            <th>Status</th>\r\n            <th>Data</th>\r\n            <th>Ações</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {ordens.map(ordem => (\r\n            <tr key={ordem.id}>\r\n              <td>{ordem.id}</td>\r\n              <td>{ordem.produto?.nome}</td>\r\n              <td>{ordem.quantidade}</td>\r\n              <td>{ordem.status}</td>\r\n              <td>{ordem.createdAt ? new Date(ordem.createdAt).toLocaleString() : ''}</td>\r\n              <td>\r\n                {ordem.status === 'Pendente' && (\r\n                  <>\r\n                    <button onClick={() => finalizarOrdem(ordem.id)}>Finalizar</button>\r\n                    <button onClick={() => cancelarOrdem(ordem.id)} style={{ marginLeft: 8 }}>Cancelar</button>\r\n                  </>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}